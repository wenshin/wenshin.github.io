{"version":3,"sources":["App.tsx","reportWebVitals.ts","dxml/util.ts","dxml/view.ts","dxml/row.ts","dxml/col.ts","dxml/elem.ts","dxml/float.ts","dxml/layer.ts","dxml/text.ts","dxml/index.ts","index.tsx"],"names":["App","style","padding","crop","className","layout","gap","align-items","dimension","backgroundColor","width","class","align","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","insertStyleElement","id","content","document","getElementById","createElement","textContent","head","appendChild","insertDimensionStyle","insertGapStyle","split","rowGap","colGap","View","this","getAttribute","HTMLElement","tag","customElements","get","define","Row","parentElement","Col","Elem","Float","Layer","mask","setAttribute","Text","delta","insertCropStyle","updateStyle","name","elem","children","length","lineHeight","parentNode","temp","classList","add","innerHTML","offsetHeight","getLineHeight","window","getComputedStyle","fontSize","parseFloat","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd74130b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div style={{ padding: 40 }}>\n      <h1>前言</h1>\n      <section>\n        <p>一直以来前端工程化领域，一直致力于在 css + js 开发上进行提质、提效，却一直忽略 html + css 的质效问题。</p>\n        <p>\n          最近几年虽然我已经能解决前端几乎所有的布局，尤其是 flex、grid 布局出现后，让复杂结构布局能力更加完美和高效。\n          但是我发现复杂的布局用 html + css 或者 wxml + css 来处理仍然是很低效的，\n          一个复杂的页面布局如果没有现成的组件可用，需要耗时半天到一天不等。\n        </p>\n        <p>\n          并且我觉得设计领域和技术领域没有统一的布局 DSL，也是阻碍设计稿自动代码化的关键点之一。\n          当然业内阿里的 imgcook 非常厉害，它靠复杂的智能技术对设计稿图片或者源文件进行分析，提取出元素树，并且适配了 React、Vue、小程序、Flutter、Android 等多种 DSL。\n          但是这项技术首先技术成本很高，从 2017 年开始，2019 年 1 月发布体验版，目前一直保持每月迭代。\n          其次设计和研发规范迭代维护成本如何，以及如何保持和适配 DSL 兼容并保证可靠性，都还没有得到很好验证。\n          如果有一套设计和技术都遵循的 DSL，相信 imgcook 的成本和不确定性将大大降低。\n        </p>\n        <p>\n          在深入学习 flex 的过程中，我发现它是一个功能强大，底层抽象极致的布局体系。\n          但是缺点也很明显，首先概念复杂理，解和熟练应用成本很高；其次和常见的 UI 设计工具概念差异很大。\n          说的直白点，是这个设计太技术化，是一个更亲近技术的设计。\n        </p>\n        <p>\n          举个例子：在子元素布局和对齐上就有四种属性 align-items、align-content、justify-content 和 align-self。\n          而对于 UI 设计工具来说，只关注两种，\n          一个是子元素和父元素位置，如：左右、上下、中间、左上、左下、右上、右下 9 个位置；\n          一个是子元素之间对齐，如：居中对齐最多、然后是顶部对齐和底部对齐。\n        </p>\n        <p>\n          为了更好的让 UI 设计概念与技术方案进行融合，甚至实现自动化。\n          我尝试设计一套新的 XML 语言，命名为 Design XML 缩写 DXML。\n        </p>\n      </section>\n      <h1>DXML 介绍</h1>\n      <h2><d-text crop=\"2px\">核心理念</d-text></h2>\n      <section>\n        <p>\n          DXML 的核心理念是设计更符合设计语言的 DSL。\n          html + css 设计之初是为了服务好图文内容的展示，而现代 Web 应用结构化布局更多。\n        </p>\n      </section>\n      <h2><d-text crop=\"2px\">标签介绍</d-text></h2>\n      <ul>\n        <li><span className=\"inline-code\">view</span>：始终占满父元素空间</li>\n        <li><span className=\"inline-code\">row</span>：始终占满父元素宽度，高度自适应，子元素始终在一行内进行布局</li>\n        <li><span className=\"inline-code\">col</span>：始终占满父元素高度，宽度自适应，子元素始终在一行内进行布局</li>\n        <li><span className=\"inline-code\">layer</span>：始终占满父元素空间，并且漂浮在其他元素之上，支持鼠标事件穿透和背景色设置</li>\n        <li><span className=\"inline-code\">elem</span>：默认适应内部视觉元素尺寸，如：文本、图片等</li>\n        <li><span className=\"inline-code\">text</span>：elem 派生的一个元素，支持处理文本 line-height 导致的空间溢出</li>\n        <li><span className=\"inline-code\">float</span>：elem 派生的一个元素，支持漂浮在父元素的上、下、左、右、中、左上、左下、右上、右下 9 个位置</li>\n      </ul>\n      <h1>实例</h1>\n      <section>\n        <d-text crop=\"2px\"><h2>圣杯布局</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='col' gap='10px'>\n            <d-row align-items='center'>\n              Header\n            </d-row>\n            <d-row dimension='stretch' gap='10px' style={{ backgroundColor: 'transparent' }}>\n              <d-col align-items='center'>SideBar</d-col>\n              <d-col dimension='stretch' align-items='center'>Content</d-col>\n              <d-col align-items='center'>SideBar</d-col>\n            </d-row>\n            <d-row align-items='center'>\n              Footer\n            </d-row>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='col' gap='10px'>\n  <d-row align-items='center'>\n    Header\n  </d-row>\n  <d-row dimension='stretch' gap='10px' style={{ backgroundColor: 'transparent' }}>\n    <d-col align-items='center'>SideBar</d-col>\n    <d-col dimension='stretch' align-items='center'>Content</d-col>\n    <d-col align-items='center'>SideBar</d-col>\n  </d-row>\n  <d-row align-items='center'>\n    Footer\n  </d-row>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>等宽 3 列，元素水平垂直居中</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='row' gap='12px'>\n            <d-col dimension='1' align-items='center'>\n              <d-row align-items='center'>\n                <div>A</div>\n                <div>A</div>\n              </d-row>\n            </d-col>\n            <d-col dimension='1' align-items='center'>BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</d-col>\n            <d-col dimension='1' align-items='center'>CC</d-col>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='row' gap='12px'>\n  <d-col dimension='1' align-items='center'>\n    <d-row align-items='center'>\n      <div>A</div>\n      <div>A</div>\n    </d-row>\n  </d-col>\n  <d-col dimension='1' align-items='center'>BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</d-col>\n  <d-col dimension='1' align-items='center'>CC</d-col>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>不同比例列，元素水平垂直居中</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='row' gap='12px'>\n            <d-col dimension='1' align-items='center'><div>A</div><div>A</div></d-col>\n            <d-col dimension='2' align-items='center'>BB</d-col>\n            <d-col dimension='2' align-items='center'>CC</d-col>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='row' gap='12px'>\n  <d-col dimension='1' align-items='center'><div>A</div><div>A</div></d-col>\n  <d-col dimension='2' align-items='center'>BB</d-col>\n  <d-col dimension='2' align-items='center'>CC</d-col>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>水平三明治布局</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='row' gap='12px'>\n            <d-col align-items='center'>AAA</d-col>\n            <d-col dimension='stretch' align-items='center'>B</d-col>\n            <d-col align-items='center'>C</d-col>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='row' gap='12px'>\n  <d-col align-items='center'>AAA</d-col>\n  <d-col dimension='stretch' align-items='center'>B</d-col>\n  <d-col align-items='center'>C</d-col>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>垂直三明治布局</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='col' gap='12px'>\n            <d-row align-items='center'>A</d-row>\n            <d-row dimension='stretch' align-items='center'>B</d-row>\n            <d-row align-items='center'>C</d-row>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='col' gap='12px'>\n  <d-row align-items='center'>A</d-row>\n  <d-row dimension='stretch' align-items='center'>B</d-row>\n  <d-row align-items='center'>C</d-row>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>不同比例行布局</h2></d-text>\n        <div className='case-container'>\n          <d-view layout='col' gap='12px'>\n            <d-row dimension='1' gap='10px' style={{backgroundColor: 'transparent'}}>\n              <d-col align-items='center'>A</d-col>\n              <d-col dimension='stretch' align-items='center'>B</d-col>\n              <d-col align-items='center'>C</d-col>\n            </d-row>\n            <d-row dimension='2' gap='10px' style={{backgroundColor: 'transparent'}}>\n              <d-col align-items='center' style={{ width: 30 }}>A</d-col>\n              <d-col dimension='stretch' align-items='center'>B</d-col>\n              <d-col align-items='center'>C</d-col>\n            </d-row>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout='col' gap='12px'>\n  <d-row dimension='1' gap='10px' style={{backgroundColor: 'transparent'}}>\n    <d-col align-items='center'>A</d-col>\n    <d-col dimension='stretch' align-items='center'>B</d-col>\n    <d-col align-items='center'>C</d-col>\n  </d-row>\n  <d-row dimension='2' gap='10px' style={{backgroundColor: 'transparent'}}>\n    <d-col align-items='center' style={{ width: 30 }}>A</d-col>\n    <d-col dimension='stretch' align-items='center'>B</d-col>\n    <d-col align-items='center'>C</d-col>\n  </d-row>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>浮动元素定位</h2></d-text>\n        <div className='case-container'>\n          <d-view>\n            <d-float class='my-class' align='top'>top</d-float>\n            <d-float align='right-top'>right-top</d-float>\n            <d-float align='right'>right</d-float>\n            <d-float align='right-bottom'>right-bottom</d-float>\n            <d-float align='bottom'>bottom</d-float>\n            <d-float align='left-bottom'>left-bottom</d-float>\n            <d-float align='left'>left</d-float>\n            <d-float align='left-top'>left-top</d-float>\n            <d-float align='center'>center</d-float>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view>\n  <d-float class='my-class' align='top'>top</d-float>\n  <d-float align='right-top'>right-top</d-float>\n  <d-float align='right'>right</d-float>\n  <d-float align='right-bottom'>right-bottom</d-float>\n  <d-float align='bottom'>bottom</d-float>\n  <d-float align='left-bottom'>left-bottom</d-float>\n  <d-float align='left'>left</d-float>\n  <d-float align='left-top'>left-top</d-float>\n  <d-float align='center'>center</d-float>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>inline 元素布局</h2></d-text>\n        <div className='case-container'>\n          <d-view layout=\"inline\" gap='12px 16px'>\n            <d-elem className='inline-elem1'>test</d-elem>\n            <d-elem class='inline-elem2' layout='row' gap='10px'>\n              <d-col align-items='center'><span>A</span><span>B</span><span>C</span></d-col>\n              <d-col align-items='center'>B</d-col>\n              <d-col align-items='center'>C</d-col>\n            </d-elem>\n            <d-elem layout='col' gap='10px'>\n              <d-row>A</d-row>\n              <d-row>B</d-row>\n              <d-row>C</d-row>\n            </d-elem>\n            <d-elem class='inline-elem3' layout='row' gap='10px'>\n              <d-col align-items='center'>A</d-col>\n              <d-col align-items='center'>B</d-col>\n              <d-col align-items='center'>C</d-col>\n            </d-elem>\n          </d-view>\n        </div>\n        <pre>\n          <code className=\"language-html\">{\n`<d-view layout=\"inline\" gap='12px 16px'>\n  <d-elem className='inline-elem1'>test</d-elem>\n  <d-elem class='inline-elem2' layout='row' gap='10px'>\n    <d-col align-items='center'><span>A</span><span>B</span><span>C</span></d-col>\n    <d-col align-items='center'>B</d-col>\n    <d-col align-items='center'>C</d-col>\n  </d-elem>\n  <d-elem layout='col' gap='10px'>\n    <d-row>A</d-row>\n    <d-row>B</d-row>\n    <d-row>C</d-row>\n  </d-elem>\n  <d-elem class='inline-elem3' layout='row' gap='10px'>\n    <d-col align-items='center'>A</d-col>\n    <d-col align-items='center'>B</d-col>\n    <d-col align-items='center'>C</d-col>\n  </d-elem>\n</d-view>`}\n          </code>\n        </pre>\n      </section>\n      <section>\n        <d-text crop=\"2px\"><h2>自动修正文本 line height 导致的边距问题</h2></d-text>\n        <d-row gap=\"12px\">\n          <d-text crop=\"1px\">DXML 设计了更适合设计稿直接转布局代码的一套标签</d-text>\n          <d-text crop=\"1px\">DXML Design for a better layout markable language from design to developer</d-text>\n          <d-text>DXML Design for a better layout markable language from design to developer</d-text>\n        </d-row>\n        <pre>\n          <code className=\"language-html\">{\n`<d-row>\n  <d-text crop=\"1px\">DXML 设计了更适合设计稿直接转布局代码的一套标签</d-text>\n  <d-text crop=\"1px\">DXML Design for a better layout markable language from design to developer</d-text>\n  <d-text>DXML Design for a better layout markable language from design to developer</d-text>\n  </d-row>`}\n          </code>\n        </pre>\n        <p>\n          提示⚠️⚠️⚠️：d-text 标签不设置 crop 标签时，会通过插入新的节点来获得文本行高，这会对首屏渲染有 10ms 以上的性能影响，如果把本页面中的标题都去掉 crop 属性，影响在 30ms 左右。\n        </p>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type PositionType = 'top' | 'right-top' | 'right' | 'right-bottom' | 'bottom' | 'left-bottom' | 'left' | 'left-top' | 'center';\n\nexport function findAncestor(elem: HTMLElement, judge: (e: HTMLElement) => boolean): HTMLElement | null {\n  if (elem.parentElement && judge(elem.parentElement)) {\n    return elem.parentElement\n  }\n  if (elem.parentElement) {\n    return findAncestor(elem.parentElement, judge)\n  }\n  return null;\n}\n\nexport function getFlexAlignCSS(tag: string) {\n  return `${tag}[align-items] {\n    display: flex;\n  }\n  ${tag}[align-items=\"center\"] {\n    align-items: center;\n    justify-content: center;\n  }\n  ${tag}[align-items=\"top\"] {\n    align-items: flex-start;\n    justify-content: center;\n  }\n  ${tag}[align-items=\"bottom\"] {\n    align-items: flex-end;\n    justify-content: center;\n  }\n  ${tag}[align-items=\"left\"] {\n    align-items: center;\n    justify-content: flex-start;\n  }\n  ${tag}[align-items=\"left-top\"] {\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n  ${tag}[align-items=\"left-bottom\"] {\n    align-items: flex-end;\n    justify-content: flex-start;\n  }\n  ${tag}[align-items=\"right\"] {\n    align-items: center;\n    justify-content: flex-end;\n  }\n  ${tag}[align-items=\"right-top\"] {\n    align-items: flex-start;\n    justify-content: flex-end;\n  }\n  ${tag}[align-items=\"right-bottom\"] {\n    align-items: flex-end;\n    justify-content: flex-end;\n  }`;\n}\n\n/**\n * 这块操作很容导致 recalc style 和 layout 性能问题，严重可以达到 10ms 及以上\n * @param elem\n * @returns\n */\nexport function getLineHeight(elem: HTMLElement) {\n  if (!elem.parentNode) return 0;\n  const temp = document.createElement('span');\n  temp.classList.add('text-corp-elem');\n  temp.innerHTML = \"A\";\n  elem.appendChild(temp);\n  return temp.offsetHeight;\n}\n\n\nexport function insertStyleElement(id: string, content: string) {\n  let style = document.getElementById(id);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = id;\n    style.textContent = content;\n    document.head.appendChild(style);\n  }\n}\n\nexport function insertDimensionStyle(dimension: string) {\n  const id = `d-dimension-${dimension}`;\n  insertStyleElement(id, `[dimension][dimension=\"${dimension}\"] { flex-grow: ${dimension}; }`)\n}\n\nexport function insertGapStyle(gap: string) {\n  const [rowGap, colGap] = gap.split(' ');\n  const id = `d-gap-${rowGap}-${colGap || rowGap}`;\n  insertStyleElement(id, `[gap=\"${gap}\"] > * { margin-right: ${rowGap}; margin-bottom: ${colGap || rowGap}; }`)\n}\n\nexport function insertCropStyle(crop: string) {\n  const id = `d-text-crop-${crop}`;\n  insertStyleElement(id, `[crop=\"${crop}\"]::before, [crop=\"${crop}\"]::after { margin-top: -${crop}; }`)\n}","import { insertGapStyle, PositionType } from './util';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-view': React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement> & {\n        class?: string;\n        layout?: 'row' | 'col' | 'inline';\n        gap?: string;\n        'align-items'?: PositionType;\n      }, HTMLElement>; // Normal web component\n    }\n  }\n}\n\nexport class View extends HTMLElement {\n  static tag = 'd-view';\n  static id = 'd-view-id';\n\n  connectedCallback() {\n    const gap = this.getAttribute('gap');\n    if (gap) {\n      insertGapStyle(gap);\n    }\n  }\n}\n\nif (customElements && !customElements.get(View.tag)) {\n\tcustomElements.define(View.tag, View);\n}\n","import { insertDimensionStyle, insertGapStyle, PositionType } from './util';\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-row': React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement> & {\n          class?: string;\n          /**\n           * stretch | 1 | 2 | 3\n           */\n          dimension?: 'stretch' | string;\n          'align-items'?: PositionType;\n          gap?: string;\n        },\n        HTMLElement\n      >; // Normal web component\n    }\n  }\n}\n\nexport class Row extends HTMLElement {\n  static tag = 'd-row';\n  static id = 'd-row-id';\n\n  connectedCallback() {\n    const dimension = this.getAttribute('dimension');\n    if (dimension !== 'stretch' && dimension && this.parentElement) {\n      insertDimensionStyle(dimension);\n    }\n    const gap = this.getAttribute('gap');\n    if (gap) {\n      insertGapStyle(gap);\n    }\n  }\n}\n\nif (customElements && !customElements.get(Row.tag)) {\n\tcustomElements.define(Row.tag, Row);\n}\n","import { insertDimensionStyle, insertGapStyle, PositionType } from './util';\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-col': React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement> & {\n          class?: string;\n          /**\n           * stretch | 1 | 2 | 3\n           */\n          dimension?: 'stretch' | string;\n          'align-items'?: PositionType;\n          gap?: string;\n        },\n        HTMLElement\n      >; // Normal web component\n    }\n  }\n}\n\nexport class Col extends HTMLElement {\n  static tag = 'd-col';\n  static id = 'd-col-id';\n\n  connectedCallback() {\n    const dimension = this.getAttribute('dimension');\n    if (dimension !== 'stretch' && dimension && this.parentElement) {\n      insertDimensionStyle(dimension)\n    }\n    const gap = this.getAttribute('gap');\n    if (gap) {\n      insertGapStyle(gap);\n    }\n  }\n}\n\nif (customElements && !customElements.get(Col.tag)) {\n\tcustomElements.define(Col.tag, Col);\n}\n","import { PositionType } from './util';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-elem': React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement> & {\n        class?: string;\n        layout?: 'row' | 'col';\n        gap?: string;\n        'align-items'?: PositionType;\n      }, HTMLElement>; // Normal web component\n    }\n  }\n}\n\n/**\n * 由内容决定尺寸的元素，如 text、image。即 inline 元素，默认为 inline-block 类型。\n */\nexport class Elem extends HTMLElement {\n  static tag = 'd-elem';\n  static id = 'd-elem-id';\n}\n\nif (customElements && !customElements.get(Elem.tag)) {\n\tcustomElements.define(Elem.tag, Elem);\n}\n","import { PositionType } from './util';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-float': React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement> & { align?: PositionType; class?: string },\n        HTMLElement\n      >; // Normal web component\n    }\n  }\n}\n\n/**\n * float element 可以设置相对父容器的浮动定位，float 必须放在 layer 标签内使用\n * 属性\n * 1. align: top、right-top、right、right-bottom、bottom、left-bottom、left、left-top、center\n */\nexport class Float extends HTMLElement {\n  static id = 'd-float-id';\n  static tag = 'd-float';\n}\n\nif (customElements && !customElements.get(Float.tag)) {\n\tcustomElements.define(Float.tag, Float);\n}\n","type Mask = 'none' | 'black' | 'white' | string;\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-layer': React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement> & {\n          class?: string;\n          mask?: Mask;\n        },\n        HTMLElement\n      >; // Normal web component\n    }\n  }\n}\n\n// layer stack management\nexport class Layer extends HTMLElement {\n  static id = 'd-layer-id';\n  static tag = 'd-layer';\n\n  connectedCallback() {\n    const mask = this.getAttribute('mask') || 'none';\n    switch (mask) {\n      case 'none':\n      case 'white':\n      case 'black':\n        break;\n      default:\n        this.setAttribute('style', `background-color: ${mask};`);\n        break;\n    }\n  }\n}\n\nif (customElements && !customElements.get(Layer.tag)) {\n\tcustomElements.define(Layer.tag, Layer);\n}\n","import { getLineHeight, insertCropStyle, insertStyleElement } from './util';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'd-text': React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement> & {\n          class?: string;\n          crop?: string; // 1px\n        },\n        HTMLElement\n      >; // Normal web component\n    }\n  }\n}\n\nexport class Text extends HTMLElement {\n  static tag = 'd-text';\n  static id = 'd-text-id';\n  delta: number = 0;\n\n  connectedCallback() {\n    const crop = this.getAttribute('crop');\n    if (crop) {\n      insertCropStyle(crop);\n    } else {\n      this.updateStyle();\n    }\n  }\n\n  attributeChangedCallback(name: string) {\n    const crop = this.getAttribute('crop');\n    if (!crop && (name === 'style' || name === 'class')) {\n      this.updateStyle();\n    }\n  }\n\n  updateStyle() {\n    const elem = this.children.length ? this.children[0] as HTMLElement : this;\n    let lineHeight = getLineHeight(elem);\n    const style = window.getComputedStyle(elem);\n    const fontSize = parseFloat(style.fontSize);\n    if (lineHeight > fontSize) {\n      const delta = (lineHeight - fontSize) / 2;\n      if (this.delta !== delta) {\n        this.delta = delta;\n        const id = `${Text.tag}-crop-${delta}`;\n        this.classList.add(id);\n        insertStyleElement(id, `\n          ${Text.tag}.${id}::before, ${Text.tag}.${id}::after {\n            margin-top: -${delta}px;\n          }\n        `);\n      }\n    }\n  }\n}\n\nif (customElements && !customElements.get(Text.tag)) {\n\tcustomElements.define(Text.tag, Text);\n}\n","import { getFlexAlignCSS, insertStyleElement } from './util';\nimport { View } from './view';\nimport { Row } from './row';\nimport { Col } from './col';\nimport { Elem } from './elem';\nimport { Float } from './float';\nimport { Layer } from './layer';\nimport { Text } from './text';\n\nconst CommonStyleId = 'd-common-id'\ninsertStyleElement(CommonStyleId, \n`${View.tag} {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  display: block;\n  box-sizing: border-box;\n}\n[layout=\"inline\"] {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-start;\n  align-content: flex-start;\n}\n${Row.tag}, ${Col.tag}, [layout=\"row\"], [layout=\"col\"] {\n  position: relative;\n  display: flex;\n  box-sizing: border-box;\n  flex: none;\n}\n${Row.tag}, [layout=\"row\"] {\n  flex-direction: row;\n  width: 100%;\n}\n${Row.tag} > [dimension], [layout=\"row\"] > [dimension] {\n  width: 1px;\n  min-width: 1px;\n  overflow: auto;\n  flex: 1;\n}\n${Row.tag} > [dimension=\"stretch\"], [layout=\"row\"] > [dimension=\"stretch\"] {\n  overflow: auto;\n  flex: 1;\n}\n${Col.tag}, [layout=\"col\"] {\n  flex-direction: column;\n  height: 100%;\n}\n${Col.tag} > [dimension], [layout=\"col\"] > [dimension] {\n  height: 1px;\n  min-height: 1px;\n  overflow: auto;\n  flex: 1;\n}\n${Col.tag} > [dimension=\"stretch\"], [layout=\"col\"] > [dimension=\"stretch\"] {\n  overflow: auto;\n  flex: 1;\n}\n${Row.tag}[gap] > *,\n[layout=\"row\"][gap] > * {\n  margin-bottom: 0;\n}\n${Col.tag}[gap] > *,\n[layout=\"col\"][gap] > * {\n  margin-right: 0;\n}\n[layout=\"row\"][gap] > *:last-child, \n${Row.tag}[gap] > *:last-child, \n[layout=\"col\"][gap] > *:last-child, \n${Col.tag}[gap] > *:last-child {\n  margin-right: 0;\n  margin-bottom: 0;\n}\n${Elem.tag}, ${Elem.tag}[layout] {\n  display: inline-flex;\n  width: initial;\n  height: initial;\n}\n${Elem.tag}[layout=\"row\"] {\n  max-width: 100%;\n}\n${Elem.tag}[layout=\"col\"] {\n  max-height: 100%;\n}\n${Elem.tag}[layout] > * {\n  flex-grow: 0;\n  flex-shrink: 1;\n}\n${getFlexAlignCSS('')}\n${Float.tag} {\n  position: absolute;\n  box-sizing: border-box;\n  display: block;\n  pointer-events: auto;\n  /* default is left top */\n  left: 0px;\n  top: 0px;\n}\n${Float.tag}[align=\"top\"] {\n  top: 0px;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\n${Float.tag}[align=\"right-top\"] {\n  top: 0px;\n  right: 0px;\n  left: initial;\n}\n${Float.tag}[align=\"right\"] {\n  left: initial;\n  right: 0px;\n  top: 50%;\n  transform: translate(0, -50%);\n}\n${Float.tag}[align=\"right-bottom\"] {\n  bottom: 0px;\n  right: 0;\n  top: initial;\n  left: initial;\n}\n${Float.tag}[align=\"bottom\"] {\n  bottom: 0px;\n  top: initial;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\n${Float.tag}[align=\"left-bottom\"] {\n  left: 0px;\n  top: initial;\n  bottom: 0px;\n}\n${Float.tag}[align=\"left\"] {\n  left: 0px;\n  top: 50%;\n  transform: translate(0, -50%);\n}\n${Float.tag}[align=\"center\"] {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n${Layer.tag} {\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  display: block;\n  height: 100%;\n  width: 100%;\n  overflow: visible;\n}\n${Layer.tag}[mask=\"none\"] {\n  pointer-events: none;\n  background-color: transparent;\n}\n${Layer.tag}[mask=\"white\"] {\n  background-color: #ffffffbb;\n}\n${Layer.tag}[mask=\"black\"] {\n  background-color: #00000073;\n}\n${Text.tag} {\n  display: inline-block;\n  box-sizing: border-box;\n  overflow: visible;\n}\n${Text.tag}::before, ${Text.tag}::after {\n  content: '';\n  display: block;\n  height: 0;\n  width: 0;\n}\n${Text.tag} .text-corp-elem {\n  margin:0;\n  padding:0;\n  width: 0;\n  display: inline-block;\n  overflow: hidden;\n}`);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './dxml';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}